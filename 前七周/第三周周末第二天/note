一、复习
1)元素获取
1.id
2.tagName
3.name
4.className
5.documentElement
6.document.body
7.querySelector
8.querySelectorAll
二、节点类型
类型          nodeType    nodeName       nodeValue
元素节点        1           大写的标签      null
文本节点        3           #text         文本内容
注释节点        8           #comment      注释内容
document       9           #document     null
三、节点关系
parentNode
childNodes ---children
previousSibling     prev  prevAll
nextSibling         next   nextAll
firstChild
lastChild
index
四、DOM动态关系
document.createElement
dopcument.createDocument
parent.appendChild
parent.insertBefore
parent.removeChild
obj.cloneNode(boolean)
parent.replaceChild(newEle,oldEle)
五、属性操作
1.通过“.”
2.通过attribute
getAttribute
setAttribute
removeAttribute
二、DOM库封装    utils :ListTOArray jsonParse   2+24=26
1）.元素获取这里
1.getByClass(curEle,strClass)
    1.在一定范围内通过className获取元素 -ary ；return ary
    2.判断高级和低级浏览器，分别处理--高级兼容
    3.低级浏览器 strClass-转数组aryclass
    4.拿到当前元素curEle下所有元素
    5.循环：目的是为了匹配每个元素的className是否符合要求，匹配要求：是这个元素上的className符合aryclass中的每一个className字符串
    6.经过匹配后还活下来的元素，就是我们要找的：这里匹配方式，我们用的正则和假设法；
    7.最后return ary；
2.hasClass(curEle,strClass)
    1.return boolean;
    2.需求：判断当前元素上是否有这个strClass（class名）
3.addClass
    1.判断：如果当前元素上没有className，可以添加
    2.添加：元素.className+=' '+strClass; --记住：一定要加空格；
4.removeClass
    1.原理跟addClass相似：如果当前元素上有这个className，就可以移除
    2.移除用replace；
5.getCss 获取非行间样式
    1.高级浏览器用getComputedStyle,低级浏览器用currentStyle
    2.过滤掉有单位的
    3.考虑透明度的兼容性问题
6.setCss 设置行间样式；
    1.设置的是行间样式
    2.加单位做了单独处理
    3.透明度做了单独处理： return；
    4.float兼容处理： return；
7.setGroupCss
    1.首先判断options如果不是对象直接返回；
    2.遍历options，分别设置样式；
8.css
    思路：
    首先判断第二个参数
        如果第二个参数是字符串
            1）如果存在第三个参数-》单个设置
            2）如果不存在第三个参数-》获取
        如果第二个参数是对象-》设置一组
9.win封装     浏览器盒子模型 包括获取和设置
10.offset 求当前元素距离body的偏移，返回值可以是一个对象or数组
2)节点关系
1)children-升级
    1.求当前元素下的子元素
    2.升级：可以通过标签名进行筛选
2)prev
    1.求上一个哥哥元素节点
    2.通过while循环和 &&条件判断（只有当节点存在，并且不是元素节点的时候才能继续往上找）
3)prevAll
    1.求所有的哥哥元素节点
    2.利用while循环
4)next -求下一个弟弟元素节点 思路同 prev
5)nextAll-求所有弟弟元素节点 思路同 prevAll
6)sibling
    1)求相邻元素节点--既然知道相邻，应该有两个邻居，所以返回值一定是数组
    2）思路：已知上一个哥哥元素和下一个弟弟元素，只要存在就放在数组里，最后返回数组
7)siblings
    1)求所有兄弟元素节点
    2）思路：已知所有的哥哥元素节点，和所有的弟弟元素节点，利用数组concat方法拼接数组
8)firstChild
    1)求第一个元素节点
    2）思路：已知所有子元素，求出数组中的第一个即可
9)lastChild--同理 firstChild，求数组中的最后一个即可
10)index
    1）求当前元素的索引
    2）思路：有几个哥哥，你就排名第几
11)appendChild
    1）插入到当前容器的末尾；
12)prependChild
    1)插入到当前容器的最开始
    2）不写父容器，如何找到父容器呢？oldEle.parentNode
13)insertBefore:新元素插入到指定元素的前面
14)insertAfter
    1）新元素插入到指定元素的后面
    2）思路：找到指定元素的弟弟元素节点，然后插入到其弟弟元素前面；
    3）注意：如果弟弟不存在呢？相当于插入到容器的末尾；












